apiVersion: apps/v1
kind: Deployment
metadata:
  name: starlight-live
spec:
  replicas: 1
  selector:
    matchLabels:
      app: starlight-live
  template:
    metadata:
      labels:
        app: starlight-live
    spec:
      volumes:
      - name: docs
        emptyDir: {}

      # INIT CONTAINER: git-sync
      initContainers:
      - name: git-sync
        image: registry.k8s.io/git-sync/git-sync:v4.0.0
        args:
        - --repo=https://github.com/andreisudarikov19/starlight-doc-repo.git
        - --branch=main
        - --root=/git
        - --dest=site
        - --one-time
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        volumeMounts:
        - name: docs
          mountPath: /git


      # MAIN CONTAINER: Astro Builder
      containers:
      - name: astro-builder
        image: node:22-bullseye
        workingDir: /git/site
        command: ["/bin/sh", "-c"]
        args:
        - |
          set -ex
          echo "Checking for cloned repo in /git/site..."
          ls -lah /git/site || true

          echo "Checking for package.json..."
          if [ ! -f package.json ]; then
            echo "package.json missing in /git/site"
            exit 1
          fi

          echo "Installing dependencies..."
          npm install

          echo "Checking Astro config..."
          if [ ! -f astro.config.mjs ]; then
            echo "astro.config.mjs not found"
            exit 1
          fi

          echo "Starting Astro build..."
          npx astro build

          echo "Astro build complete. Holding container open for inspection."
          astro telemetry disable
          tail -f /dev/null
        volumeMounts:
        - name: docs
          mountPath: /git
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"

      # STATIC SERVER: NGINX
      - name: static-server
        image: nginx:alpine
        volumeMounts:
        - name: docs
          mountPath: /usr/share/nginx/html
          subPath: site/dist
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
